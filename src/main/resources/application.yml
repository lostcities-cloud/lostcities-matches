spring:
  application.name: matches
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by gradle when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred

  jpa:
    open-in-view: false
    properties:
      hibernate:
        jdbc.time_zone: UTC
        cache.use_second_level_cache: true
        cache.use_query_cache: false
        generate_statistics: true
        jdbc.batch_size: 25
        order_inserts: true
        order_updates: true
        query.in_clause_parameter_padding: true
    hibernate:
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
  datasource.hikari:
    poolName: Hikari
    auto-commit: false
  flyway:
    baseline-version: 0
    table: SCHEMA_VERSION
    check-location: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    driver-class-name: org.postgresql.Driver
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
    lazy-initialization: true
  output.ansi:
    enabled: DETECT
    console-available: true

server:
  port: 8080
  forward-headers-strategy: framework
  servlet:
    context-path: /api

springdoc:
  api-docs.enabled: true
  packagesToScan: io.dereknelson.lostcities.matches.api

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

application:
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: ZmNhZmUyNzNkNTE1ZTdiZDA2MmJjNWY4MWE2NzFlMTRkMmViNGE3M2E0YTRiYjg1ZGMxMDY1NGZkNjhhMTdmMjI4OTA5NTUzMzkyZjI1NDUyNjFlY2M3MjBkY2Y2OTAwMGU3NDQwYWMxNmZiNTJjZmZjMzkxMmU1OGZmYzQxOGU=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000

management:
  metrics.tags:
    application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 4452

